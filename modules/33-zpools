#!/usr/bin/env bash
set -euo pipefail

# Default zpools, can be overridden in config.sh
declare -A zpools
zpools["rpool"]="Root Pool"

# shellcheck source=./framework.sh
source "${BASE_DIR}/framework.sh"

text=""

# Gather pool info directly by name
while read -r line; do
    # Split fields on arbitrary whitespace
    read -r name size alloc free percentage <<<"$line"

    display_name="${zpools[$name]:-$name}"

    if zpool status -x "$name" 2>/dev/null | head -1 | grep -q "is healthy"; then
        status="healthy"
    else
        status="check"
    fi

    left_label="${display_name} (${status}) - ${alloc} used, ${free} free"
    right_label="/ ${size}"

    # Calculate the actual width needed for the labels
    left_length=${#left_label}
    right_length=${#right_label}
    total_needed=$((left_length + right_length))

    if (( total_needed <= WIDTH )); then
        label=$(print_split "${WIDTH}" "${left_label}" "${right_label}")
    else
        label="${left_label} ${right_label}"
    fi

    cap_num="${percentage%\%}"

    text+="${label}\n$(print_bar "${WIDTH}" "${cap_num}")\n"
done < <(
    for pool in "${!zpools[@]}"; do
        zpool list -H -o name,size,alloc,free,cap "$pool" 2>/dev/null || true
    done
)

if [[ -n "$text" ]]; then
    print_columns "ZFS Pools" "${text::-2}"
else
    print_columns "ZFS Pools" "No ZFS pools found"
fi
